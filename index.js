const axios = require("axios");

const URLS = {
  uploadDataset: "/api/deviceapi/uploadDataset",
  initDatasetIncrement: "/api/deviceapi/initDatasetIncrement",
  addDatasetIncrement: "/api/deviceapi/addDatasetIncrement",
};

axios.interceptors.response.use(
  (response) => {
    if (response.status === 401) {
      alert("You are not authorized");
    }
    return response;
  },
  (error) => {
    if (error.response && error.response.data) {
      return Promise.reject(error.response.data.error);
    }
    return Promise.reject(error.message);
  }
);

/**
 * Uploads a whole dataset to a specific project
 * @param {string} url - The url of the backend server
 * @param {string} key - The Device-Api-Key
 * @param {object} dataset - The dataset to upload
 * @returns A Promise indicating success or failure
 */
exports.sendDataset = function (url, key, dataset) {
  return new Promise((resolve, reject) => {
    return axios
      .post(url + URLS.uploadDataset, { key: key, payload: dataset })
      .then((data) => resolve(data.data))
      .catch((err) => reject(err));
  });
};

/**
 * 
 * @param {string} url - The url of the backend server
 * @param {string} key - The Device-Api-Key
 * @param {boolean} useServerTime - True if you want to use timestamps generated by the server
 * @returns Function to upload single datapoints to one dataset inside a specific project
 */
exports.datasetCollector = async function (url, key, useServerTime) {
  try {
    const data = await axios.post(url + URLS.initDatasetIncrement, {
      deviceApiKey: key,
    });
    if (!data || data.error) {
      throw new Error();
    }
    const datasetKey = data.data.datasetKey;

    /**
     * Uploads a vlaue for a specific timestamp to a datasets timeSeries with name sensorName
     * @param {string} timeSeriesName - The name of the timeSeries to upload the value to
     * @param {number} datapoint - The datapoint to upload
     * @param {number} timestamp - The timestamp assigned to the datapoint
     * @returns A Promise indicating success or failure of upload
     */
    function addDataPoint(timeSeriesName, datapoint, timestamp) {
      return new Promise((resolve, reject) => {
        axios
          .post(url + URLS.addDatasetIncrement, {
            datasetKey: datasetKey,
            time: timestamp,
            datapoint: datapoint,
            sensorname: timeSeriesName,
          })
          .then((data) => {
            resolve();
          })
          .catch((err) => {
            reject(err);
          });
      });
    }
    if (useServerTime) {
      return (sensorname, datapoint) =>
        addDataPoint(sensorname, datapoint, undefined);
    } else {
      return (sensorname, datapoint, time) =>
        addDataPoint(sensorname, datapoint, time);
    }
  } catch (e) {
    return { error: "Could not initialize datasetCollector" };

  }
};
